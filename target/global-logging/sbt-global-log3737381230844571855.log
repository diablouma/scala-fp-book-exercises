[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""/private/var/folders/kr/1px40q7d1rj4k35d46jv5zv00000gq/T/idea10.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""/private/var/folders/kr/1px40q7d1rj4k35d46jv5zv00000gq/T/idea10.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.2 (Azul Systems, Inc. Java 11.0.8)
[debug]       Load.loadUnit: plugins took 101.752232ms
[debug]       Load.loadUnit: defsScala took 0.335244ms
[debug] [Loading] Scanning directory /Users/njumbo/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/njumbo/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.57937 ms
[debug]           Load.resolveProject(global-plugins) took 57.379074ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/njumbo/.sbt/1.0/plugins, plugins: List(<none>))) took 121.408765ms
[debug] [Loading] Done in /Users/njumbo/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 149.366199ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.260117ms
[debug]     Load.loadUnit(file:/Users/njumbo/.sbt/1.0/plugins/, ...) took 259.219077ms
[debug]   Load.apply: load took 3968.545041ms
[debug]   Load.apply: resolveProjects took 8.199335ms
[debug]   Load.apply: finalTransforms took 64.821566ms
[debug]   Load.apply: config.delegates took 7.765785ms
[debug]   Load.apply: Def.make(settings)... took 352.595265ms
[debug]   Load.apply: structureIndex took 110.080938ms
[debug]   Load.apply: mkStreams took 1.757407ms
[info] loading global plugins from /Users/njumbo/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6260.885959ms
[debug]           Load.loadUnit: plugins took 18.344965ms
[debug]           Load.loadUnit: defsScala took 0.005553ms
[debug] [Loading] Scanning directory /Users/njumbo/scala_fp_book/project
[debug]             Load.loadUnit: mkEval took 8.989394ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/njumbo/scala_fp_book/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.884681 ms
[info] loading settings for project scala_fp_book-build from idea10.sbt ...
[debug]               Load.resolveProject(scala_fp_book-build) took 3.200818ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala_fp_book-build, base: /Users/njumbo/scala_fp_book/project, plugins: List(<none>))) took 5.713072ms
[debug] [Loading] Done in /Users/njumbo/scala_fp_book/project, returning: (scala_fp_book-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 166.540598ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.679651ms
[debug]         Load.loadUnit(file:/Users/njumbo/scala_fp_book/project/, ...) took 190.387875ms
[debug]       Load.apply: load took 191.661765ms
[debug]       Load.apply: resolveProjects took 0.105131ms
[debug]       Load.apply: finalTransforms took 12.39615ms
[debug]       Load.apply: config.delegates took 0.373924ms
[debug]       Load.apply: Def.make(settings)... took 89.102576ms
[debug]       Load.apply: structureIndex took 26.76244ms
[debug]       Load.apply: mkStreams took 0.003285ms
[info] loading project definition from /Users/njumbo/scala_fp_book/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 557.93845ms
[debug]     Load.loadUnit: defsScala took 0.003179ms
[debug] [Loading] Scanning directory /Users/njumbo/scala_fp_book
[debug]       Load.loadUnit: mkEval took 0.17078ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/njumbo/scala_fp_book, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.577249 ms
[info] loading settings for project scala_fp_book from build.sbt ...
[debug]         Load.resolveProject(scala_fp_book) took 29.242138ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala_fp_book, base: /Users/njumbo/scala_fp_book, plugins: List(<none>))) took 32.958797ms
[debug] [Loading] Done in /Users/njumbo/scala_fp_book, returning: (scala_fp_book)
[debug]     Load.loadUnit: loadedProjectsRaw took 58.704419ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.346857ms
[debug]   Load.loadUnit(file:/Users/njumbo/scala_fp_book/, ...) took 619.630143ms
[debug] Load.apply: load took 620.961479ms
[debug] Load.apply: resolveProjects took 0.093292ms
[debug] Load.apply: finalTransforms took 28.052765ms
[debug] Load.apply: config.delegates took 0.363579ms
[debug] Load.apply: Def.make(settings)... took 62.964869ms
[debug] Load.apply: structureIndex took 25.894523ms
[debug] Load.apply: mkStreams took 0.002586ms
[info] set current project to scala_fp_book (in build file:/Users/njumbo/scala_fp_book/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61050 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61050, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scala_fp_book (in build file:/Users/njumbo/scala_fp_book/)
[debug] > Exec(idea-shell, None, None)
